// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.qihoo.security.malware;

import android.content.ComponentName;
import android.content.Context;
import android.content.ServiceConnection;
import android.content.pm.ApplicationInfo;
import android.content.res.AssetManager;
import android.net.TrafficStats;
import android.os.IBinder;
import android.os.Process;
import android.os.RemoteException;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import com.qihoo.security.SecurityApplication;
import com.qihoo.security.engine.ApkInfo;
import com.qihoo.security.engine.FileInfo;
import com.qihoo.security.locale.language.b;
import com.qihoo.security.malware.vo.MaliciousInfo;
import com.qihoo.security.service.PackageMonitorService;
import com.qihoo.security.services.DeepScanService;
import com.qihoo.security.services.IDeepScan;
import com.qihoo.security.services.ScanProgress;
import com.qihoo.security.services.ScanResult;
import com.qihoo.security.services.c;
import com.qihoo360.common.utils.ContextHelper;
import com.qihoo360.mobilesafe.b.o;
import com.qihoo360.mobilesafe.b.s;
import com.qihoo360.mobilesafe.share.SharedPref;
import com.qihoo360.mobilesafe.support.NativeManager;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class com.qihoo.security.malware.a
    implements Runnable
{
    public static class a
    {

        public int a;
        public int b;
        public int c;

        public a()
        {
        }
    }

    private class b
        implements Runnable
    {

        final com.qihoo.security.malware.a a;

        public void run()
        {
            int i1;
            long l1;
            i1 = 0;
            l1 = System.currentTimeMillis();
_L1:
            int j1;
            long l2;
            long l3;
            if (!com.qihoo.security.malware.a.q(a))
            {
                break MISSING_BLOCK_LABEL_84;
            }
            l3 = System.currentTimeMillis();
            if (com.qihoo.security.malware.a.r(a) > i1)
            {
                break MISSING_BLOCK_LABEL_85;
            }
            l2 = l1;
            j1 = i1;
            if (l3 - l1 <= 30000L)
            {
                break MISSING_BLOCK_LABEL_97;
            }
            l2 = l1;
            j1 = i1;
            if (com.qihoo.security.malware.a.h(a) == null)
            {
                break MISSING_BLOCK_LABEL_97;
            }
            com.qihoo.security.malware.a.h(a).a("engine.enabled", "2:0");
            return;
            j1 = com.qihoo.security.malware.a.r(a);
            l2 = l3;
_L2:
            Thread.sleep(10000L);
            l1 = l2;
            i1 = j1;
              goto _L1
            Object obj;
            obj;
            l1 = l2;
            i1 = j1;
              goto _L1
            obj;
            l2 = l1;
            j1 = i1;
              goto _L2
        }

        private b()
        {
            a = com.qihoo.security.malware.a.this;
            super();
        }

    }

    public static interface c
    {

        public abstract void a();
    }

    public static class d
    {

        public boolean a;
        public List b;
        public int c;
        public int d;

        public d()
        {
        }
    }

    public static interface e
    {

        public abstract void a(a a1);

        public abstract void a(d d1);

        public abstract void b(d d1);
    }


    private static boolean n = false;
    private boolean a;
    private IDeepScan b;
    private final Context c = SecurityApplication.a();
    private boolean d;
    private boolean e;
    private boolean f;
    private final String g = "http://msch.f.360.cn/MobiVirusCheck";
    private final ExecutorService h = Executors.newSingleThreadExecutor();
    private e i;
    private int j;
    private String k;
    private final byte l[] = new byte[0];
    private boolean m;
    private final List o = new ArrayList();
    private long p;
    private boolean q;
    private boolean r;
    private int s;
    private int t;
    private final com.qihoo.security.services.c u = new com.qihoo.security.services.c.a() {

        final com.qihoo.security.malware.a a;

        public void a()
            throws RemoteException
        {
            com.qihoo.security.malware.a.e(a, false);
            if (com.qihoo.security.malware.a.c(a) == 2)
            {
                com.qihoo.security.malware.a.d(a, true);
                (new Thread(a. new b())).start();
            }
            synchronized (com.qihoo.security.malware.a.e(a))
            {
                com.qihoo.security.malware.a.b(a, true);
                com.qihoo.security.malware.a.e(a).notifyAll();
            }
            return;
            exception;
            c1;
            JVM INSTR monitorexit ;
            throw exception;
        }

        public void a(int i1, String s1, String s2)
            throws RemoteException
        {
            com.qihoo.security.malware.a.d(a, false);
            synchronized (com.qihoo.security.malware.a.e(a))
            {
                com.qihoo.security.malware.a.c(a, true);
                com.qihoo.security.malware.a.e(a).notifyAll();
            }
            com.qihoo.security.malware.a.a(a, 3, com.qihoo.security.malware.a.c(a), 2, null);
            return;
            s2;
            s1;
            JVM INSTR monitorexit ;
            throw s2;
        }

        public void a(ScanProgress scanprogress)
            throws RemoteException
        {
            com.qihoo.security.malware.a.n(a).execute(new Runnable(this, scanprogress) {

                final ScanProgress a;
                final _cls6 b;

                public void run()
                {
                    if (a == null || a.result == null) goto _L2; else goto _L1
_L1:
                    com.qihoo.security.malware.a.a(b.a, a.total);
                    if (a.result.state != 127 || com.qihoo.security.malware.a.c(b.a) != 0) goto _L4; else goto _L3
_L3:
                    ApkInfo apkinfo = a.result.fileInfo.apkInfo;
                    if (TextUtils.equals(com.qihoo.security.malware.a.o(b.a), apkinfo.packageName)) goto _L6; else goto _L5
_L5:
                    b.a.b();
_L2:
                    return;
_L6:
                    b.a.b();
_L4:
                    byte byte0 = -1;
                    int i1 = byte0;
                    if (a.result.fileInfo.extIniInfo != null)
                    {
                        Object obj = a.result.fileInfo.getCloudConfig(null, "app_source", "-1");
                        i1 = byte0;
                        MaliciousInfo maliciousinfo;
                        Object obj1;
                        boolean flag;
                        if (!"-1".equals(obj))
                        {
                            try
                            {
                                i1 = Integer.valueOf(((String) (obj))).intValue();
                            }
                            catch (NumberFormatException numberformatexception)
                            {
                                i1 = byte0;
                            }
                        }
                    }
                    obj = new ArrayList();
                    maliciousinfo = new MaliciousInfo();
                    if (a.result.fileInfo.fileType == 1)
                    {
                        obj1 = a.result.fileInfo.apkInfo;
                        maliciousinfo.packageName = ((ApkInfo) (obj1)).packageName;
                        maliciousinfo.maliceRank = ((ApkInfo) (obj1)).maliceRank;
                        maliciousinfo.isSystem = ((ApkInfo) (obj1)).isSystem();
                        maliciousinfo.isInstalled = ((ApkInfo) (obj1)).isInstalled;
                        maliciousinfo.filePath = ((ApkInfo) (obj1)).filePath;
                        if (!TextUtils.isEmpty(a.result.fileInfo.trojanName))
                        {
                            maliciousinfo.trojanName = a.result.fileInfo.trojanName;
                        }
                    } else
                    if (a.result.fileInfo.fileType == 0)
                    {
                        maliciousinfo.filePath = a.result.fileInfo.filePath;
                    }
                    maliciousinfo.riskClass = a.result.riskClass;
                    maliciousinfo.behavior = (int)a.result.fileInfo.behavior;
                    if (com.qihoo.security.malware.a.c(b.a) == 0)
                    {
                        flag = true;
                    } else
                    {
                        flag = false;
                    }
                    maliciousinfo.isMonitor = flag;
                    maliciousinfo.appSource = i1;
                    maliciousinfo.state = a.result.state;
                    maliciousinfo.fileType = a.result.fileInfo.fileType;
                    if (maliciousinfo.isHarmful() && com.qihoo.security.malware.a.b(b.a, maliciousinfo.packageName))
                    {
                        maliciousinfo.riskClass = 0;
                    }
                    ((List) (obj)).add(maliciousinfo);
                    if (a.result.fileInfo.fileType == 1 && maliciousinfo.state == 127)
                    {
                        com.qihoo.security.malware.a.l(b.a).add(maliciousinfo);
                        com.qihoo.security.malware.a.m(b.a);
                    }
                    if (com.qihoo.security.malware.a.l(b.a).size() > 0 && maliciousinfo.isHarmful() || a.percent == 100 || com.qihoo.security.malware.a.c(b.a) == 0)
                    {
                        com.qihoo.security.malware.db.a.a(com.qihoo.security.malware.a.b(b.a), com.qihoo.security.malware.a.l(b.a));
                        com.qihoo.security.malware.a.l(b.a).clear();
                    }
                    (new ArrayList()).add(a.result);
                    obj1 = new d();
                    obj1.b = ((List) (obj));
                    obj1.c = a.percent;
                    obj1.d = a.total;
                    if (maliciousinfo.isHarmful() || a.percent == 100 || com.qihoo.security.malware.a.c(b.a) == 0)
                    {
                        com.qihoo.security.malware.a.a(b.a, 1, com.qihoo.security.malware.a.c(b.a), 0, ((d) (obj1)));
                        return;
                    }
                    if (true) goto _L2; else goto _L7
_L7:
                }

            
            {
                b = _pcls6;
                a = scanprogress;
                super();
            }
            });
        }

        public void a(List list, boolean flag)
            throws RemoteException
        {
            com.qihoo.security.malware.a.n(a).execute(new Runnable(this, flag, list) {

                final boolean a;
                final List b;
                final _cls6 c;

                public void run()
                {
                    ArrayList arraylist;
                    Object obj;
                    boolean flag;
                    arraylist = new ArrayList();
                    obj = b.iterator();
                    flag = false;
_L5:
                    ScanResult scanresult;
label0:
                    {
                        if (((Iterator) (obj)).hasNext())
                        {
                            scanresult = (ScanResult)((Iterator) (obj)).next();
                            if (!c.a.g())
                            {
                                break label0;
                            }
                        }
                        if (com.qihoo.security.malware.a.l(c.a).size() > 0 && flag || !a)
                        {
                            com.qihoo.security.malware.db.a.a(com.qihoo.security.malware.a.b(c.a), com.qihoo.security.malware.a.l(c.a));
                            com.qihoo.security.malware.a.l(c.a).clear();
                        }
                        obj = new d();
                        obj.a = a;
                        obj.b = arraylist;
                        if ((flag || !a) && !c.a.g())
                        {
                            com.qihoo.security.malware.a.a(c.a, 2, com.qihoo.security.malware.a.c(c.a), 0, ((d) (obj)));
                        }
                        if (!a)
                        {
                            com.qihoo.security.malware.a.d(c.a, false);
                            if (!c.a.g())
                            {
                                c.a.b();
                            }
                        }
                        return;
                    }
                    if (scanresult.state != 127) goto _L2; else goto _L1
_L1:
                    byte byte0 = -1;
                    int i1 = byte0;
                    if (scanresult.fileInfo.extIniInfo != null)
                    {
                        Object obj1 = scanresult.fileInfo.getCloudConfig(null, "app_source", "-1");
                        i1 = byte0;
                        ApkInfo apkinfo;
                        boolean flag1;
                        if (!"-1".equals(obj1))
                        {
                            try
                            {
                                i1 = Integer.valueOf(((String) (obj1))).intValue();
                            }
                            catch (NumberFormatException numberformatexception)
                            {
                                i1 = byte0;
                            }
                        }
                    }
                    obj1 = new MaliciousInfo();
                    if (scanresult.fileInfo.fileType != 1) goto _L4; else goto _L3
_L3:
                    apkinfo = scanresult.fileInfo.apkInfo;
                    obj1.packageName = apkinfo.packageName;
                    obj1.maliceRank = apkinfo.maliceRank;
                    obj1.isSystem = apkinfo.isSystem();
                    obj1.isInstalled = apkinfo.isInstalled;
                    obj1.filePath = apkinfo.filePath;
                    if (!TextUtils.isEmpty(scanresult.fileInfo.trojanName))
                    {
                        obj1.trojanName = scanresult.fileInfo.trojanName;
                    }
_L6:
                    obj1.riskClass = scanresult.riskClass;
                    obj1.behavior = (int)scanresult.fileInfo.behavior;
                    if (com.qihoo.security.malware.a.c(c.a) == 0)
                    {
                        flag1 = true;
                    } else
                    {
                        flag1 = false;
                    }
                    obj1.isMonitor = flag1;
                    obj1.appSource = i1;
                    obj1.state = scanresult.state;
                    obj1.fileType = scanresult.fileInfo.fileType;
                    if (((MaliciousInfo) (obj1)).isHarmful() && com.qihoo.security.malware.a.b(c.a, ((MaliciousInfo) (obj1)).packageName))
                    {
                        obj1.riskClass = 0;
                    }
                    i1 = ((flag) ? 1 : 0);
                    if (((MaliciousInfo) (obj1)).isHarmful())
                    {
                        i1 = 1;
                    }
                    arraylist.add(obj1);
                    flag = i1;
                    if (scanresult.fileInfo.fileType == 1)
                    {
                        flag = i1;
                        if (((MaliciousInfo) (obj1)).state == 127)
                        {
                            com.qihoo.security.malware.a.l(c.a).add(obj1);
                            com.qihoo.security.malware.a.m(c.a);
                            flag = i1;
                        }
                    }
_L2:
                    if (true) goto _L5; else goto _L4
_L4:
                    if (scanresult.fileInfo.fileType == 0)
                    {
                        obj1.filePath = scanresult.fileInfo.filePath;
                    }
                      goto _L6
                }

            
            {
                c = _pcls6;
                a = flag;
                b = list;
                super();
            }
            });
        }

        public void b()
            throws RemoteException
        {
            com.qihoo.security.malware.a.d(a, false);
        }

            
            {
                a = com.qihoo.security.malware.a.this;
                super();
            }
    };
    private final ServiceConnection v = new ServiceConnection() {

        final com.qihoo.security.malware.a a;

        public void onServiceConnected(ComponentName componentname, IBinder ibinder)
        {
            synchronized (com.qihoo.security.malware.a.p(a))
            {
                if (!com.qihoo.security.malware.a.a(a))
                {
                    com.qihoo.security.malware.a.e(a, true);
                    com.qihoo.security.malware.a.a(a, com.qihoo.security.services.IDeepScan.a.a(ibinder));
                    (new Thread(a)).start();
                }
            }
            return;
            ibinder;
            componentname;
            JVM INSTR monitorexit ;
            throw ibinder;
        }

        public void onServiceDisconnected(ComponentName componentname)
        {
            com.qihoo.security.malware.a.a(a, null);
            com.qihoo.security.malware.a.a(a, false);
        }

            
            {
                a = com.qihoo.security.malware.a.this;
                super();
            }
    };
    private ArrayList w;
    private final String x = "i_l.dat";

    public com.qihoo.security.malware.a()
    {
        a = false;
        b = null;
        d = false;
        e = false;
        f = false;
        j = -1;
        p = 0L;
        q = false;
        r = false;
        s = 0;
        t = 0;
    }

    static int a(com.qihoo.security.malware.a a1, int i1)
    {
        a1.s = i1;
        return i1;
    }

    static IDeepScan a(com.qihoo.security.malware.a a1, IDeepScan ideepscan)
    {
        a1.b = ideepscan;
        return ideepscan;
    }

    static String a(com.qihoo.security.malware.a a1, String s1)
    {
        a1.k = s1;
        return s1;
    }

    private List a(String as[])
    {
        ArrayList arraylist = new ArrayList();
        BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec("ps").getInputStream()));
_L2:
        String s1 = bufferedreader.readLine();
        if (s1 == null)
        {
            break MISSING_BLOCK_LABEL_99;
        }
        if (!a(s1, as)) goto _L2; else goto _L1
_L1:
        String as1[] = s1.split("\\s+");
        if (as1 == null) goto _L2; else goto _L3
_L3:
        if (as1.length <= 1) goto _L2; else goto _L4
_L4:
        arraylist.add(Integer.valueOf(Integer.valueOf(as1[1]).intValue()));
          goto _L2
        try
        {
            bufferedreader.close();
        }
        // Misplaced declaration of an exception variable
        catch (String as[])
        {
            return arraylist;
        }
        return arraylist;
    }

    private void a(int i1, int j1, int k1, d d1)
    {
        i1;
        JVM INSTR tableswitch 1 3: default 28
    //                   1 29
    //                   2 60
    //                   3 84;
           goto _L1 _L2 _L3 _L4
_L1:
        return;
_L2:
        i1 = d1.c;
        i1 = d1.d;
        if (i != null)
        {
            i.a(d1);
            return;
        }
        continue; /* Loop/switch isn't completed */
_L3:
        r = false;
        if (i != null)
        {
            i.b(d1);
            return;
        }
        if (true) goto _L1; else goto _L4
_L4:
        r = true;
        a = false;
        if (i != null)
        {
            d1 = new a();
            d1.a = k1;
            d1.b = t;
            d1.c = s;
            i.a(d1);
            return;
        }
        if (true) goto _L1; else goto _L5
_L5:
    }

    static void a(com.qihoo.security.malware.a a1, int i1, int j1, int k1, d d1)
    {
        a1.a(i1, j1, k1, d1);
    }

    private boolean a(Context context)
    {
        return ContextHelper.bindService(context, com/qihoo/security/services/DeepScanService, null, v, 1);
    }

    static boolean a(com.qihoo.security.malware.a a1)
    {
        return a1.f;
    }

    static boolean a(com.qihoo.security.malware.a a1, Context context)
    {
        return a1.a(context);
    }

    static boolean a(com.qihoo.security.malware.a a1, boolean flag)
    {
        a1.q = flag;
        return flag;
    }

    private boolean a(String s1, String as[])
    {
        boolean flag2 = false;
        boolean flag = false;
        boolean flag1 = flag2;
        if (!TextUtils.isEmpty(s1))
        {
            flag1 = flag2;
            if (as != null)
            {
                flag1 = flag2;
                if (as.length > 0)
                {
                    int j1 = as.length;
                    int i1 = 0;
                    do
                    {
                        flag1 = flag;
                        if (i1 >= j1)
                        {
                            break;
                        }
                        if (s1.contains(as[i1]))
                        {
                            flag = true;
                        }
                        i1++;
                    } while (true);
                }
            }
        }
        return flag1;
    }

    static boolean a(boolean flag)
    {
        n = flag;
        return flag;
    }

    static Context b(com.qihoo.security.malware.a a1)
    {
        return a1.c;
    }

    static boolean b(com.qihoo.security.malware.a a1, String s1)
    {
        return a1.b(s1);
    }

    static boolean b(com.qihoo.security.malware.a a1, boolean flag)
    {
        a1.d = flag;
        return flag;
    }

    private boolean b(String s1)
    {
label0:
        {
            boolean flag2 = false;
            boolean flag = flag2;
            if (w != null)
            {
                flag = flag2;
                if (w.size() > 0)
                {
                    flag = flag2;
                    if (!TextUtils.isEmpty(s1))
                    {
                        if (!w.contains("*"))
                        {
                            break label0;
                        }
                        flag = true;
                    }
                }
            }
            return flag;
        }
        Iterator iterator = w.iterator();
        boolean flag1 = false;
        do
        {
            if (!iterator.hasNext())
            {
                break;
            }
            String s2 = (String)iterator.next();
            if (!TextUtils.isEmpty(s2))
            {
                if (s2.endsWith("*"))
                {
                    s2 = s2.substring(0, s2.length() - 2);
                    if (s1.startsWith((new StringBuilder()).append(s2).append(".").toString()) || s1.equals(s2))
                    {
                        flag1 = true;
                    }
                } else
                if (s2.equals(s1))
                {
                    flag1 = true;
                }
            }
        } while (true);
        return flag1;
    }

    static int c(com.qihoo.security.malware.a a1)
    {
        return a1.j;
    }

    static boolean c(com.qihoo.security.malware.a a1, boolean flag)
    {
        a1.e = flag;
        return flag;
    }

    static boolean d(com.qihoo.security.malware.a a1)
    {
        return a1.m;
    }

    static boolean d(com.qihoo.security.malware.a a1, boolean flag)
    {
        a1.a = flag;
        return flag;
    }

    static com.qihoo.security.services.c e(com.qihoo.security.malware.a a1)
    {
        return a1.u;
    }

    static boolean e(com.qihoo.security.malware.a a1, boolean flag)
    {
        a1.m = flag;
        return flag;
    }

    static boolean f(com.qihoo.security.malware.a a1)
    {
        return a1.d;
    }

    static boolean g(com.qihoo.security.malware.a a1)
    {
        return a1.e;
    }

    static IDeepScan h(com.qihoo.security.malware.a a1)
    {
        return a1.b;
    }

    static boolean h()
    {
        return n;
    }

    private void i()
    {
        Object obj = a(new String[] {
            (new StringBuilder()).append(c.getPackageName()).append(":scan").toString(), (new StringBuilder()).append(c.getPackageName()).append(":engine").toString()
        });
        if (obj != null && ((List) (obj)).size() > 0)
        {
            for (obj = ((List) (obj)).iterator(); ((Iterator) (obj)).hasNext(); Process.killProcess(((Integer)((Iterator) (obj)).next()).intValue())) { }
        }
    }

    static boolean i(com.qihoo.security.malware.a a1)
    {
        return a1.r;
    }

    private void j()
    {
        boolean flag;
        flag = true;
        String s1;
        IDeepScan ideepscan;
        try
        {
            l();
        }
        catch (RemoteException remoteexception) { }
        ideepscan = b;
        if (com.qihoo360.mobilesafe.b.o.a(c))
        {
            s1 = "1";
        } else
        {
            s1 = "0";
        }
        Exception exception;
        try
        {
            ideepscan.a("scan.cloudfirst", s1);
        }
        catch (Exception exception2) { }
        try
        {
            b.a("engine.enabled", "2:1");
        }
        catch (Exception exception1) { }
        break MISSING_BLOCK_LABEL_53;
_L2:
        try
        {
            b.b("12", (new StringBuilder()).append("{\"is_trust_unknown\":").append(i1).append("}").toString());
            return;
        }
        // Misplaced declaration of an exception variable
        catch (Exception exception)
        {
            return;
        }
        int i1;
        if (android.provider.Settings.Secure.getInt(c.getContentResolver(), "install_non_market_apps", 0) == 1)
        {
            i1 = 1;
        } else
        {
            i1 = 0;
        }
        while (i1 == 0) 
        {
            i1 = 0;
            continue; /* Loop/switch isn't completed */
        }
        i1 = ((flag) ? 1 : 0);
        if (true) goto _L2; else goto _L1
_L1:
    }

    static void j(com.qihoo.security.malware.a a1)
    {
        a1.i();
    }

    static long k(com.qihoo.security.malware.a a1)
    {
        return a1.p;
    }

    private void k()
    {
label0:
        {
            if (b == null)
            {
                break label0;
            }
            int i1;
            try
            {
                b.g();
                if (!b.a(u))
                {
                    break label0;
                }
                j();
                i1 = b.b();
            }
            catch (Exception exception)
            {
                return;
            }
            if (i1 == 0);
        }
    }

    static List l(com.qihoo.security.malware.a a1)
    {
        return a1.o;
    }

    private void l()
        throws RemoteException
    {
        Object obj1 = (TelephonyManager)c.getSystemService("phone");
        Object obj = Locale.getDefault();
        obj1 = ((TelephonyManager) (obj1)).getSimCountryIso();
        if (!TextUtils.isEmpty(((CharSequence) (obj1))))
        {
            obj = ((String) (obj1)).toUpperCase(Locale.US);
        } else
        {
            obj = ((Locale) (obj)).getCountry();
        }
        obj1 = SharedPref.b(c, "key_virus_scan_strict_version");
        if ((!SharedPref.b(c, "key_virus_scan_strict_mode", false) || TextUtils.isEmpty(((CharSequence) (obj1)))) && !TextUtils.isEmpty(((CharSequence) (obj))) && ("CN".equals(obj) || "CHN".equals(obj)))
        {
            b.b("201", "http://msch.f.360.cn/MobiVirusCheck");
        }
    }

    static int m(com.qihoo.security.malware.a a1)
    {
        int i1 = a1.t;
        a1.t = i1 + 1;
        return i1;
    }

    private ArrayList m()
    {
        Object obj1;
        Object obj2;
        Object obj4;
        ArrayList arraylist;
        obj2 = null;
        obj4 = null;
        obj1 = null;
        arraylist = new ArrayList();
        Object obj = c.getAssets().open("i_l.dat");
        if (obj == null)
        {
            break MISSING_BLOCK_LABEL_222;
        }
        obj1 = com.qihoo360.mobilesafe.b.s.a(((InputStream) (obj)), NativeManager.a);
        obj = obj1;
        obj1 = obj;
        if (obj == null) goto _L2; else goto _L1
_L1:
        obj2 = new BufferedReader(new InputStreamReader(((InputStream) (obj))));
_L5:
        obj1 = ((BufferedReader) (obj2)).readLine();
        if (obj1 == null) goto _L4; else goto _L3
_L3:
        arraylist.add(((String) (obj1)).trim());
          goto _L5
        obj1;
        obj1 = obj;
        obj = obj2;
_L10:
        if (obj != null)
        {
            try
            {
                ((BufferedReader) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) { }
        }
        if (obj1 != null)
        {
            try
            {
                ((InputStream) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj)
            {
                return arraylist;
            }
        }
_L7:
        return arraylist;
_L4:
        obj1 = obj;
_L2:
        if (obj2 != null)
        {
            try
            {
                ((BufferedReader) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) { }
        }
        if (obj1 == null) goto _L7; else goto _L6
_L6:
        try
        {
            ((InputStream) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj)
        {
            return arraylist;
        }
        return arraylist;
        obj1;
        obj = null;
        obj2 = obj4;
_L9:
        if (obj2 != null)
        {
            try
            {
                ((BufferedReader) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj2) { }
        }
        if (obj != null)
        {
            try
            {
                ((InputStream) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) { }
        }
        throw obj1;
        obj1;
        obj2 = obj4;
        continue; /* Loop/switch isn't completed */
        obj1;
        obj2 = obj4;
        continue; /* Loop/switch isn't completed */
        obj1;
        if (true) goto _L9; else goto _L8
_L8:
        obj;
        obj = null;
          goto _L10
        obj1;
        obj1 = obj;
        obj = null;
          goto _L10
        obj1;
        Object obj3 = null;
        obj1 = obj;
        obj = obj3;
          goto _L10
        obj1 = obj;
          goto _L2
    }

    static ExecutorService n(com.qihoo.security.malware.a a1)
    {
        return a1.h;
    }

    static String o(com.qihoo.security.malware.a a1)
    {
        return a1.k;
    }

    static byte[] p(com.qihoo.security.malware.a a1)
    {
        return a1.l;
    }

    static boolean q(com.qihoo.security.malware.a a1)
    {
        return a1.a;
    }

    static int r(com.qihoo.security.malware.a a1)
    {
        return a1.t;
    }

    public void a()
    {
        while (f || j != -1) 
        {
            return;
        }
        p = System.currentTimeMillis();
        s = 0;
        t = 0;
        if (w == null)
        {
            w = m();
        }
        (new Thread() {

            final com.qihoo.security.malware.a a;

            public void run()
            {
                int i1 = 0;
                com/qihoo/security/malware/a;
                JVM INSTR monitorenter ;
_L3:
                if (!com.qihoo.security.malware.a.h()) goto _L2; else goto _L1
_L1:
                if (!com.qihoo.security.malware.a.a(a))
                {
                    break MISSING_BLOCK_LABEL_25;
                }
                com/qihoo/security/malware/a;
                JVM INSTR monitorexit ;
                return;
                Object obj;
                boolean flag;
                boolean flag1;
                try
                {
                    com/qihoo/security/malware/a.wait(20L);
                }
                catch (InterruptedException interruptedexception) { }
                finally { }
                if (true) goto _L3; else goto _L2
_L2:
                com.qihoo.security.malware.a.a(true);
                flag = false;
_L11:
                if (flag || i1 > 5) goto _L5; else goto _L4
_L4:
                flag1 = com.qihoo.security.malware.a.a(a, com.qihoo.security.malware.a.b(a));
                if (flag1) goto _L7; else goto _L6
_L6:
                Thread.sleep(1000L);
_L9:
                if (i1 < 5)
                {
                    break; /* Loop/switch isn't completed */
                }
                com.qihoo.security.malware.a.a(a, 3, com.qihoo.security.malware.a.c(a), 1, null);
                break; /* Loop/switch isn't completed */
                obj;
                ((InterruptedException) (obj)).printStackTrace();
                if (true) goto _L9; else goto _L8
                com/qihoo/security/malware/a;
                JVM INSTR monitorexit ;
                throw obj;
_L7:
                com.qihoo.security.malware.a.a(a, true);
                flag = true;
                continue; /* Loop/switch isn't completed */
_L5:
                com/qihoo/security/malware/a;
                JVM INSTR monitorexit ;
                return;
_L8:
                i1++;
                if (true) goto _L11; else goto _L10
_L10:
            }

            
            {
                a = com.qihoo.security.malware.a.this;
                super();
            }
        }).start();
    }

    public void a(c c1)
    {
        this;
        JVM INSTR monitorenter ;
        if (!f) goto _L2; else goto _L1
_L1:
        a = false;
        if (c1 == null)
        {
            break MISSING_BLOCK_LABEL_24;
        }
        c1.a();
_L4:
        this;
        JVM INSTR monitorexit ;
        return;
_L2:
        synchronized (l)
        {
            f = true;
        }
        (new Thread(c1) {

            final c a;
            final com.qihoo.security.malware.a b;

            public void run()
            {
                if (!com.qihoo.security.malware.a.d(b)) goto _L2; else goto _L1
_L1:
                com.qihoo.security.services.c c2 = com.qihoo.security.malware.a.e(b);
                c2;
                JVM INSTR monitorenter ;
                int i1 = 0;
_L4:
                boolean flag;
                if (com.qihoo.security.malware.a.f(b))
                {
                    break MISSING_BLOCK_LABEL_74;
                }
                flag = com.qihoo.security.malware.a.g(b);
                if (flag || i1 >= 2000)
                {
                    break MISSING_BLOCK_LABEL_74;
                }
                com.qihoo.security.malware.a.e(b).wait(20L);
                i1 += 20;
                continue; /* Loop/switch isn't completed */
                c2;
                JVM INSTR monitorexit ;
_L2:
                com.qihoo.security.malware.a.a(b, null);
                Exception exception2;
                if (com.qihoo.security.malware.a.h(b) != null)
                {
                    try
                    {
                        com.qihoo.security.malware.a.h(b).b(com.qihoo.security.malware.a.e(b));
                    }
                    catch (Exception exception1) { }
                }
                if (com.qihoo.security.malware.a.h(b) != null)
                {
                    try
                    {
                        com.qihoo.security.malware.a.h(b).f();
                    }
                    catch (Exception exception) { }
                }
                if (com.qihoo.security.malware.a.h(b) == null);
                if (com.qihoo.security.malware.a.c(b) != 0)
                {
                    PackageMonitorService.a(false);
                }
                com.qihoo.security.malware.a.b(b, false);
                com.qihoo.security.malware.a.c(b, false);
                com.qihoo.security.malware.a.a(false);
                com.qihoo.security.malware.a.d(b, false);
                com.qihoo.security.malware.a.a(b, null);
                if (a != null)
                {
                    a.a();
                }
                if (com.qihoo.security.malware.a.i(b))
                {
                    com.qihoo.security.malware.a.j(b);
                }
                return;
                exception2;
                c2;
                JVM INSTR monitorexit ;
                throw exception2;
                InterruptedException interruptedexception;
                interruptedexception;
                if (true) goto _L4; else goto _L3
_L3:
            }

            
            {
                b = com.qihoo.security.malware.a.this;
                a = c1;
                super();
            }
        }).start();
        if (true) goto _L4; else goto _L3
_L3:
        c1;
        throw c1;
        c1;
        abyte0;
        JVM INSTR monitorexit ;
        throw c1;
    }

    public void a(e e1)
    {
        i = e1;
    }

    public void a(String s1)
    {
        while (f || j != -1) 
        {
            return;
        }
        j = 0;
        k = s1;
        (new Thread(s1) {

            final String a;
            final com.qihoo.security.malware.a b;

            public void run()
            {
                com.qihoo.security.services.c c1 = com.qihoo.security.malware.a.e(b);
                c1;
                JVM INSTR monitorenter ;
_L2:
label0:
                {
                    if (com.qihoo.security.malware.a.f(b) || com.qihoo.security.malware.a.g(b))
                    {
                        break; /* Loop/switch isn't completed */
                    }
                    if (!com.qihoo.security.malware.a.a(b))
                    {
                        break label0;
                    }
                    return;
                }
                Exception exception;
                if (System.currentTimeMillis() - com.qihoo.security.malware.a.k(b) <= 30000L)
                {
                    break MISSING_BLOCK_LABEL_86;
                }
                com.qihoo.security.malware.a.a(b, 3, com.qihoo.security.malware.a.c(b), 1, null);
                return;
                c1;
                JVM INSTR monitorexit ;
                throw exception;
                try
                {
                    com.qihoo.security.malware.a.e(b).wait(20L);
                }
                catch (InterruptedException interruptedexception) { }
                finally { }
                if (true) goto _L2; else goto _L1
_L1:
                c1;
                JVM INSTR monitorexit ;
                DeepScanService.scanPackage(com.qihoo.security.malware.a.h(b), a, false);
                return;
            }

            
            {
                b = com.qihoo.security.malware.a.this;
                a = s1;
                super();
            }
        }).start();
    }

    public void b()
    {
        this;
        JVM INSTR monitorenter ;
        a(((c) (null)));
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public void c()
    {
        while (f || j != -1) 
        {
            return;
        }
        PackageMonitorService.a(true);
        j = 1;
        (new Thread() {

            final com.qihoo.security.malware.a a;

            public void run()
            {
                com.qihoo.security.services.c c1 = com.qihoo.security.malware.a.e(a);
                c1;
                JVM INSTR monitorenter ;
_L2:
label0:
                {
                    if (com.qihoo.security.malware.a.f(a) || com.qihoo.security.malware.a.g(a))
                    {
                        break; /* Loop/switch isn't completed */
                    }
                    if (!com.qihoo.security.malware.a.a(a))
                    {
                        break label0;
                    }
                    return;
                }
                Exception exception;
                if (System.currentTimeMillis() - com.qihoo.security.malware.a.k(a) <= 30000L)
                {
                    break MISSING_BLOCK_LABEL_86;
                }
                com.qihoo.security.malware.a.a(a, 3, com.qihoo.security.malware.a.c(a), 1, null);
                return;
                c1;
                JVM INSTR monitorexit ;
                throw exception;
                try
                {
                    com.qihoo.security.malware.a.e(a).wait(20L);
                }
                catch (InterruptedException interruptedexception) { }
                finally { }
                if (true) goto _L2; else goto _L1
_L1:
                c1;
                JVM INSTR monitorexit ;
                com.qihoo.security.malware.db.a.h(com.qihoo.security.malware.a.b(a));
                DeepScanService.scanInstalledApps(com.qihoo.security.malware.a.h(a), false);
                return;
            }

            
            {
                a = com.qihoo.security.malware.a.this;
                super();
            }
        }).start();
    }

    public void d()
    {
        while (f || j != -1) 
        {
            return;
        }
        PackageMonitorService.a(true);
        j = 2;
        (new Thread() {

            final com.qihoo.security.malware.a a;

            public void run()
            {
                com.qihoo.security.services.c c1 = com.qihoo.security.malware.a.e(a);
                c1;
                JVM INSTR monitorenter ;
_L2:
label0:
                {
                    if (com.qihoo.security.malware.a.f(a) || com.qihoo.security.malware.a.g(a))
                    {
                        break; /* Loop/switch isn't completed */
                    }
                    if (!com.qihoo.security.malware.a.a(a))
                    {
                        break label0;
                    }
                    return;
                }
                Exception exception;
                if (System.currentTimeMillis() - com.qihoo.security.malware.a.k(a) <= 30000L)
                {
                    break MISSING_BLOCK_LABEL_86;
                }
                com.qihoo.security.malware.a.a(a, 3, com.qihoo.security.malware.a.c(a), 1, null);
                return;
                c1;
                JVM INSTR monitorexit ;
                throw exception;
                try
                {
                    com.qihoo.security.malware.a.e(a).wait(20L);
                }
                catch (InterruptedException interruptedexception) { }
                finally { }
                if (true) goto _L2; else goto _L1
_L1:
                c1;
                JVM INSTR monitorexit ;
                com.qihoo.security.malware.db.a.h(com.qihoo.security.malware.a.b(a));
                DeepScanService.scanAll(com.qihoo.security.malware.a.h(a), false);
                return;
            }

            
            {
                a = com.qihoo.security.malware.a.this;
                super();
            }
        }).start();
    }

    public String e()
    {
        return (new StringBuilder()).append("").append(com.qihoo.security.locale.language.b.d(c)).append("|").append(s).append("|").append(t).append("|").append(f()).toString();
    }

    public long f()
    {
        if (TrafficStats.getUidTxBytes(c.getApplicationInfo().uid) == -1L)
        {
            return 0L;
        } else
        {
            return TrafficStats.getTotalRxBytes();
        }
    }

    public boolean g()
    {
        return f;
    }

    public void run()
    {
        k();
    }

}
