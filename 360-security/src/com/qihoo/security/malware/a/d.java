// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.qihoo.security.malware.a;

import android.app.Activity;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import com.qihoo.security.malware.db.a;
import com.qihoo.security.malware.vo.MaliciousInfo;
import com.qihoo360.common.utils.Utils;
import com.qihoo360.mobilesafe.b.o;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

// Referenced classes of package com.qihoo.security.malware.a:
//            a

public class d extends com.qihoo.security.malware.a.a
{

    private final List d = new ArrayList();

    public d(Context context, a.a a1)
    {
        super(context, a1);
    }

    private void a(MaliciousInfo maliciousinfo)
    {
        if (Utils.isAdminActive(a, maliciousinfo.packageName))
        {
            (new Handler(Looper.getMainLooper())).post(new Runnable(maliciousinfo) {

                final MaliciousInfo a;
                final d b;

                public void run()
                {
                    if (b.a instanceof Activity)
                    {
                        Utils.openDeviceAdminForPackage((Activity)b.a, a.packageName);
                    }
                }

            
            {
                b = d.this;
                a = maliciousinfo;
                super();
            }
            });
        }
        o.b(a, maliciousinfo.packageName);
    }

    private void c()
    {
        if (d.isEmpty())
        {
            c.sendEmptyMessage(2);
            return;
        } else
        {
            a((MaliciousInfo)d.remove(0));
            return;
        }
    }

    public void a(List list)
    {
        list = list.iterator();
        ArrayList arraylist = new ArrayList();
        do
        {
            if (!list.hasNext())
            {
                break;
            }
            MaliciousInfo maliciousinfo = (MaliciousInfo)list.next();
            if (maliciousinfo != null)
            {
                if (maliciousinfo.isInstalled)
                {
                    arraylist.add(maliciousinfo);
                } else
                {
                    (new File(maliciousinfo.filePath)).delete();
                    com.qihoo.security.malware.db.a.a(a, maliciousinfo._id);
                    list.remove();
                }
            }
        } while (true);
        if (arraylist.isEmpty())
        {
            c.sendEmptyMessage(2);
            return;
        } else
        {
            d.clear();
            d.addAll(arraylist);
            c();
            return;
        }
    }

    public void b()
    {
        c();
    }
}
