// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.qihoo.security.malware.db;

import android.content.ContentProviderOperation;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.text.TextUtils;
import com.qihoo.security.malware.vo.MaliciousInfo;
import com.qihoo360.common.utils.Utils;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

// Referenced classes of package com.qihoo.security.malware.db:
//            c

public class a
{

    public static final List a(Context context)
    {
        return a(context, "r_c=?", new String[] {
            String.valueOf(1)
        }, false);
    }

    public static final List a(Context context, String s)
    {
        return a(context, "p_n=?", new String[] {
            s
        }, false);
    }

    private static List a(Context context, String s, String as[], boolean flag)
    {
        ArrayList arraylist = new ArrayList();
        List list;
        list = com.qihoo.security.malware.db.c.a(context);
        context = context.getContentResolver().query(e.a.a, new String[] {
            "_id", "p_n", "r_c", "be", "m_r", "i_s", "i_i", "f_p", "i_m", "f_d", 
            "a_s", "a_l", "t_n"
        }, s, as, "_id DESC");
        if (context == null) goto _L2; else goto _L1
_L1:
        if (context.getCount() <= 0) goto _L2; else goto _L3
_L3:
        if (!context.moveToNext()) goto _L2; else goto _L4
_L4:
        s = context.getString(context.getColumnIndexOrThrow("p_n"));
        int i;
        int j;
        boolean flag1;
        boolean flag2;
        if (context.getInt(context.getColumnIndexOrThrow("i_i")) == 1)
        {
            flag1 = true;
        } else
        {
            flag1 = false;
        }
        j = context.getInt(context.getColumnIndexOrThrow("r_c"));
        if (!flag1 || j <= 1 || j >= 600 || list == null) goto _L6; else goto _L5
_L5:
        as = list.iterator();
_L10:
        if (!as.hasNext()) goto _L8; else goto _L7
_L7:
        if (!TextUtils.equals(s, ((MaliciousInfo)as.next()).packageName)) goto _L10; else goto _L9
_L9:
        i = 1;
          goto _L11
_L15:
        as = new MaliciousInfo();
        as._id = context.getInt(context.getColumnIndexOrThrow("_id"));
        as.packageName = s;
        as.riskClass = i;
        as.behavior = context.getInt(context.getColumnIndexOrThrow("be"));
        as.maliceRank = context.getInt(context.getColumnIndexOrThrow("m_r"));
        if (context.getInt(context.getColumnIndexOrThrow("i_s")) == 1)
        {
            flag2 = true;
        } else
        {
            flag2 = false;
        }
        as.isSystem = flag2;
        as.isInstalled = flag1;
        as.filePath = context.getString(context.getColumnIndexOrThrow("f_p"));
        if (context.getInt(context.getColumnIndexOrThrow("i_m")) == 1)
        {
            flag1 = true;
        } else
        {
            flag1 = false;
        }
        as.isMonitor = flag1;
        as.appSource = context.getInt(context.getColumnIndexOrThrow("a_s"));
        as.setLabel(context.getString(context.getColumnIndexOrThrow("a_l")));
        as.trojanName = context.getString(context.getColumnIndexOrThrow("t_n"));
        arraylist.add(as);
          goto _L3
        s;
_L14:
        Utils.closeCursor(context);
        return arraylist;
_L2:
        Utils.closeCursor(context);
        return arraylist;
        s;
        context = null;
_L13:
        Utils.closeCursor(context);
        throw s;
        s;
        if (true) goto _L13; else goto _L12
_L12:
        context;
        context = null;
        if (true) goto _L14; else goto _L6
_L6:
        i = j;
          goto _L15
_L8:
        i = 0;
_L11:
        if (i == 0) goto _L6; else goto _L16
_L16:
        if (!flag) goto _L3; else goto _L17
_L17:
        i = 0;
          goto _L15
    }

    public static final void a(Context context, int i)
    {
        a(context, "_id=?", new String[] {
            String.valueOf(i)
        });
    }

    private static final void a(Context context, String s, String as[])
    {
        try
        {
            context.getContentResolver().delete(e.a.a, s, as);
            return;
        }
        // Misplaced declaration of an exception variable
        catch (Context context)
        {
            return;
        }
    }

    public static final void a(Context context, List list)
    {
        ArrayList arraylist = new ArrayList();
        list = list.iterator();
        while (list.hasNext()) 
        {
            MaliciousInfo maliciousinfo = (MaliciousInfo)list.next();
            ContentValues contentvalues;
            int i;
            if (maliciousinfo.isInstalled)
            {
                arraylist.add(ContentProviderOperation.newDelete(e.a.a).withSelection("p_n=? AND i_i=?", new String[] {
                    maliciousinfo.packageName, String.valueOf(1)
                }).build());
            } else
            {
                arraylist.add(ContentProviderOperation.newDelete(e.a.a).withSelection("f_p=? AND i_i<>?", new String[] {
                    maliciousinfo.filePath, String.valueOf(1)
                }).build());
            }
            contentvalues = new ContentValues();
            contentvalues.put("p_n", maliciousinfo.packageName);
            contentvalues.put("r_c", Integer.valueOf(maliciousinfo.riskClass));
            contentvalues.put("be", Integer.valueOf(maliciousinfo.behavior));
            contentvalues.put("m_r", Integer.valueOf(maliciousinfo.maliceRank));
            if (maliciousinfo.isSystem)
            {
                i = 1;
            } else
            {
                i = 0;
            }
            contentvalues.put("i_s", Integer.valueOf(i));
            if (maliciousinfo.isInstalled)
            {
                i = 1;
            } else
            {
                i = 0;
            }
            contentvalues.put("i_i", Integer.valueOf(i));
            contentvalues.put("f_p", maliciousinfo.filePath);
            if (maliciousinfo.isMonitor)
            {
                i = 1;
            } else
            {
                i = 0;
            }
            contentvalues.put("i_m", Integer.valueOf(i));
            contentvalues.put("a_s", Integer.valueOf(maliciousinfo.appSource));
            contentvalues.put("a_l", maliciousinfo.getLabel(context));
            contentvalues.put("t_n", maliciousinfo.trojanName);
            arraylist.add(ContentProviderOperation.newInsert(e.a.a).withValues(contentvalues).build());
        }
        try
        {
            context.getContentResolver().applyBatch("com.qihoo.security.lite.provider.scanResult", arraylist);
            return;
        }
        // Misplaced declaration of an exception variable
        catch (Context context)
        {
            return;
        }
    }

    public static final List b(Context context)
    {
        return a(context, "r_c>?", new String[] {
            String.valueOf(1)
        }, false);
    }

    public static final List c(Context context)
    {
        return a(context, "r_c>=?", new String[] {
            String.valueOf(600)
        }, false);
    }

    public static final List d(Context context)
    {
        return a(context, "r_c>? AND r_c<?", new String[] {
            String.valueOf(1), String.valueOf(600)
        }, false);
    }

    public static final List e(Context context)
    {
        return a(context, "i_m=? AND r_c>?", new String[] {
            String.valueOf(1), String.valueOf(1)
        }, false);
    }

    public static final List f(Context context)
    {
        return a(context, "i_m=? AND r_c>=?", new String[] {
            String.valueOf(1), String.valueOf(600)
        }, false);
    }

    public static final List g(Context context)
    {
        return a(context, "i_m=? AND r_c>? AND r_c<?", new String[] {
            String.valueOf(1), String.valueOf(1), String.valueOf(600)
        }, false);
    }

    public static final void h(Context context)
    {
        a(context, "r_c<=?", new String[] {
            String.valueOf(1)
        });
    }
}
