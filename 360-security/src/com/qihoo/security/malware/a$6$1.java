// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.qihoo.security.malware;

import android.os.RemoteException;
import android.text.TextUtils;
import com.qihoo.security.engine.ApkInfo;
import com.qihoo.security.engine.FileInfo;
import com.qihoo.security.malware.db.a;
import com.qihoo.security.malware.vo.MaliciousInfo;
import com.qihoo.security.services.ScanProgress;
import com.qihoo.security.services.ScanResult;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.ExecutorService;

// Referenced classes of package com.qihoo.security.malware:
//            a

class b
    implements Runnable
{

    final boolean a;
    final List b;
    final o.filePath c;

    public void run()
    {
        ArrayList arraylist;
        Object obj;
        boolean flag;
        arraylist = new ArrayList();
        obj = b.iterator();
        flag = false;
_L5:
        ScanResult scanresult;
label0:
        {
            if (((Iterator) (obj)).hasNext())
            {
                scanresult = (ScanResult)((Iterator) (obj)).next();
                if (!c.c.g())
                {
                    break label0;
                }
            }
            if (com.qihoo.security.malware.a.l(c.c).size() > 0 && flag || !a)
            {
                com.qihoo.security.malware.db.a.a(com.qihoo.security.malware.a.b(c.c), com.qihoo.security.malware.a.l(c.c));
                com.qihoo.security.malware.a.l(c.c).clear();
            }
            obj = new nit>();
            obj.nit> = a;
            obj.a = arraylist;
            if ((flag || !a) && !c.c.g())
            {
                com.qihoo.security.malware.a.a(c.c, 2, com.qihoo.security.malware.a.c(c.c), 0, ((c) (obj)));
            }
            if (!a)
            {
                com.qihoo.security.malware.a.d(c.c, false);
                if (!c.c.g())
                {
                    c.c.b();
                }
            }
            return;
        }
        if (scanresult.state != 127) goto _L2; else goto _L1
_L1:
        byte byte0 = -1;
        int i = byte0;
        if (scanresult.fileInfo.extIniInfo != null)
        {
            Object obj1 = scanresult.fileInfo.getCloudConfig(null, "app_source", "-1");
            i = byte0;
            ApkInfo apkinfo;
            boolean flag1;
            if (!"-1".equals(obj1))
            {
                try
                {
                    i = Integer.valueOf(((String) (obj1))).intValue();
                }
                catch (NumberFormatException numberformatexception)
                {
                    i = byte0;
                }
            }
        }
        obj1 = new MaliciousInfo();
        if (scanresult.fileInfo.fileType != 1) goto _L4; else goto _L3
_L3:
        apkinfo = scanresult.fileInfo.apkInfo;
        obj1.packageName = apkinfo.packageName;
        obj1.maliceRank = apkinfo.maliceRank;
        obj1.isSystem = apkinfo.isSystem();
        obj1.isInstalled = apkinfo.isInstalled;
        obj1.filePath = apkinfo.filePath;
        if (!TextUtils.isEmpty(scanresult.fileInfo.trojanName))
        {
            obj1.trojanName = scanresult.fileInfo.trojanName;
        }
_L6:
        obj1.riskClass = scanresult.riskClass;
        obj1.behavior = (int)scanresult.fileInfo.behavior;
        if (com.qihoo.security.malware.a.c(c.c) == 0)
        {
            flag1 = true;
        } else
        {
            flag1 = false;
        }
        obj1.isMonitor = flag1;
        obj1.appSource = i;
        obj1.state = scanresult.state;
        obj1.fileType = scanresult.fileInfo.fileType;
        if (((MaliciousInfo) (obj1)).isHarmful() && com.qihoo.security.malware.a.b(c.c, ((MaliciousInfo) (obj1)).packageName))
        {
            obj1.riskClass = 0;
        }
        i = ((flag) ? 1 : 0);
        if (((MaliciousInfo) (obj1)).isHarmful())
        {
            i = 1;
        }
        arraylist.add(obj1);
        flag = i;
        if (scanresult.fileInfo.fileType == 1)
        {
            flag = i;
            if (((MaliciousInfo) (obj1)).state == 127)
            {
                com.qihoo.security.malware.a.l(c.c).add(obj1);
                com.qihoo.security.malware.a.m(c.c);
                flag = i;
            }
        }
_L2:
        if (true) goto _L5; else goto _L4
_L4:
        if (scanresult.fileInfo.fileType == 0)
        {
            obj1.filePath = scanresult.fileInfo.filePath;
        }
          goto _L6
    }

    init>(init> init>, boolean flag, List list)
    {
        c = init>;
        a = flag;
        b = list;
        super();
    }

    // Unreferenced inner class com/qihoo/security/malware/a$6

/* anonymous class */
    class a._cls6 extends com.qihoo.security.services.c.a
    {

        final com.qihoo.security.malware.a a;

        public void a()
            throws RemoteException
        {
            com.qihoo.security.malware.a.e(a, false);
            if (com.qihoo.security.malware.a.c(a) == 2)
            {
                com.qihoo.security.malware.a.d(a, true);
                (new Thread(new a.b(a, null))).start();
            }
            synchronized (com.qihoo.security.malware.a.e(a))
            {
                com.qihoo.security.malware.a.b(a, true);
                com.qihoo.security.malware.a.e(a).notifyAll();
            }
            return;
            exception;
            c1;
            JVM INSTR monitorexit ;
            throw exception;
        }

        public void a(int i, String s, String s1)
            throws RemoteException
        {
            com.qihoo.security.malware.a.d(a, false);
            synchronized (com.qihoo.security.malware.a.e(a))
            {
                com.qihoo.security.malware.a.c(a, true);
                com.qihoo.security.malware.a.e(a).notifyAll();
            }
            com.qihoo.security.malware.a.a(a, 3, com.qihoo.security.malware.a.c(a), 2, null);
            return;
            s1;
            s;
            JVM INSTR monitorexit ;
            throw s1;
        }

        public void a(ScanProgress scanprogress)
            throws RemoteException
        {
            com.qihoo.security.malware.a.n(a).execute(new a._cls6._cls2(scanprogress));
        }

        public void a(List list, boolean flag)
            throws RemoteException
        {
            com.qihoo.security.malware.a.n(a).execute(new a._cls6._cls1(this, flag, list));
        }

        public void b()
            throws RemoteException
        {
            com.qihoo.security.malware.a.d(a, false);
        }

            
            {
                a = a1;
                super();
            }

        // Unreferenced inner class com/qihoo/security/malware/a$6$2

/* anonymous class */
        class a._cls6._cls2
            implements Runnable
        {

            final ScanProgress a;
            final a._cls6 b;

            public void run()
            {
                if (a == null || a.result == null) goto _L2; else goto _L1
_L1:
                com.qihoo.security.malware.a.a(b.a, a.total);
                if (a.result.state != 127 || com.qihoo.security.malware.a.c(b.a) != 0) goto _L4; else goto _L3
_L3:
                ApkInfo apkinfo = a.result.fileInfo.apkInfo;
                if (TextUtils.equals(com.qihoo.security.malware.a.o(b.a), apkinfo.packageName)) goto _L6; else goto _L5
_L5:
                b.a.b();
_L2:
                return;
_L6:
                b.a.b();
_L4:
                byte byte0 = -1;
                int i = byte0;
                if (a.result.fileInfo.extIniInfo != null)
                {
                    Object obj = a.result.fileInfo.getCloudConfig(null, "app_source", "-1");
                    i = byte0;
                    MaliciousInfo maliciousinfo;
                    Object obj1;
                    boolean flag;
                    if (!"-1".equals(obj))
                    {
                        try
                        {
                            i = Integer.valueOf(((String) (obj))).intValue();
                        }
                        catch (NumberFormatException numberformatexception)
                        {
                            i = byte0;
                        }
                    }
                }
                obj = new ArrayList();
                maliciousinfo = new MaliciousInfo();
                if (a.result.fileInfo.fileType == 1)
                {
                    obj1 = a.result.fileInfo.apkInfo;
                    maliciousinfo.packageName = ((ApkInfo) (obj1)).packageName;
                    maliciousinfo.maliceRank = ((ApkInfo) (obj1)).maliceRank;
                    maliciousinfo.isSystem = ((ApkInfo) (obj1)).isSystem();
                    maliciousinfo.isInstalled = ((ApkInfo) (obj1)).isInstalled;
                    maliciousinfo.filePath = ((ApkInfo) (obj1)).filePath;
                    if (!TextUtils.isEmpty(a.result.fileInfo.trojanName))
                    {
                        maliciousinfo.trojanName = a.result.fileInfo.trojanName;
                    }
                } else
                if (a.result.fileInfo.fileType == 0)
                {
                    maliciousinfo.filePath = a.result.fileInfo.filePath;
                }
                maliciousinfo.riskClass = a.result.riskClass;
                maliciousinfo.behavior = (int)a.result.fileInfo.behavior;
                if (com.qihoo.security.malware.a.c(b.a) == 0)
                {
                    flag = true;
                } else
                {
                    flag = false;
                }
                maliciousinfo.isMonitor = flag;
                maliciousinfo.appSource = i;
                maliciousinfo.state = a.result.state;
                maliciousinfo.fileType = a.result.fileInfo.fileType;
                if (maliciousinfo.isHarmful() && com.qihoo.security.malware.a.b(b.a, maliciousinfo.packageName))
                {
                    maliciousinfo.riskClass = 0;
                }
                ((List) (obj)).add(maliciousinfo);
                if (a.result.fileInfo.fileType == 1 && maliciousinfo.state == 127)
                {
                    com.qihoo.security.malware.a.l(b.a).add(maliciousinfo);
                    com.qihoo.security.malware.a.m(b.a);
                }
                if (com.qihoo.security.malware.a.l(b.a).size() > 0 && maliciousinfo.isHarmful() || a.percent == 100 || com.qihoo.security.malware.a.c(b.a) == 0)
                {
                    com.qihoo.security.malware.db.a.a(com.qihoo.security.malware.a.b(b.a), com.qihoo.security.malware.a.l(b.a));
                    com.qihoo.security.malware.a.l(b.a).clear();
                }
                (new ArrayList()).add(a.result);
                obj1 = new a.d();
                obj1.b = ((List) (obj));
                obj1.c = a.percent;
                obj1.d = a.total;
                if (maliciousinfo.isHarmful() || a.percent == 100 || com.qihoo.security.malware.a.c(b.a) == 0)
                {
                    com.qihoo.security.malware.a.a(b.a, 1, com.qihoo.security.malware.a.c(b.a), 0, ((a.d) (obj1)));
                    return;
                }
                if (true) goto _L2; else goto _L7
_L7:
            }

                    
                    {
                        b = a._cls6.this;
                        a = scanprogress;
                        super();
                    }
        }

    }

}
